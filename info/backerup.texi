\input texinfo  @c -*-texinfo-*-
@comment %**start of header
@setfilename backerup.info
@documentlanguage en
@documentencoding iso-8859-1
@include version.texi
@settitle The BackerUp@registeredsymbol{} @value{VERSION}
@setchapternewpage odd

@ifnothtml
@setcontentsaftertitlepage
@end ifnothtml
@finalout

@smallbook

@c %**end of header

@c Combine indices.

@syncodeindex ky cp
@syncodeindex pg cp
@syncodeindex tp cp
@defcodeindex op
@syncodeindex op cp
@syncodeindex vr cp

@copying

This manual is for BackerUp@registeredsymbol{} (version @value{VERSION}, @value{UPDATED}),
which creates and maintains remote backups.

Copyright @copyright{} 2013 G. Allen Morris III

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU General Public License, Version 2 or
any later version published by the Free Software Foundation; with no
Invariant Sections.  A copy of the license is
included in the section entitled ``GNU General Public License.''

@end quotation
@end copying

@dircategory Networking
@direntry
* Backerup:             Backup management system.
@end direntry

@shorttitlepage @command{backerup}

@titlepage
@title BackerUp
@subtitle A Robust Network Backup System
@subtitle @value{RENDITION} @value{VERSION}, @value{UPDATED}
@author G. Allen Morris III <@email{gam3@@gam3.com}>

@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents

@ifnottex
@node Top
@top BackerUp - Backup Managment System
@insertcopying
@end ifnottex

@menu
* Distribution::            Where to find backerup: source, packages etc.
* Introduction::            Important concepts you need to know as a user
* Invoking::                How to invoke backerup
* Errors and omissions::    Known problems
* History::                 History of BackerUp
* Copying this manual::     The GNU General Public License
@end menu

@node Distribution
@unnumbered Distribution

BackerUp is @dfn{free software}; this means that everyone is free to use
it and free to redistribute it on certain conditions. The precise
conditions are found in the GNU General Public License that comes with
this program and can be found here:
@uref{http://www.gnu.org/copyleft/gpl.html}.

@noindent
You can obtain BackerUp from a friend or from the Internet:

@table @asis
@item Home page @uref{http://backerup.github.com/}
@end table

@c @node Copying, Introduction, Distribution, Top
@c #@include gpl.texi

@node Introduction
@chapter Introduction

BackerUp is a system to backup computer filesystems across possibly unreliable networks.

It relies heavily on the @emph{rsync} program by Andrew Tridgell, Wayne
Davison, and others to do the actual coping of files. However it could
use other programs to do the actual moving of files across the network.

Backerup is simular to these programs:

@itemize
  @item rsnapshot
  @item rsync
  @item rdiff-backup
  @item Dirvish
@end itemize

@node Invoking
@chapter Invoking @command{backerup}

Backerup has 3 major componantes: a collector, a copier and a cleaner.

The collector is normally run as a daemon while the copier and the cleaner are run as cron jobs.

The collector is responsable for getting files across the network into a
``backup'' and contains most of the complexity of the systems. The
copier makes a copy of the ``backup'' at some given interval. The sieve
then removes older copies of the ``backup'' normally keeping one backup
for each month and one for each day on the current 5 to 10 days.

The copier takes a @emph{snapshot} of the collected files. It is a very
simple script on linux compters that dulicates the links of the
@emph{static} directory into an hourly directory.

The cleaner removes unneeded snapshots. If the copier is running hourly
the system generates a very large number of backup directories. The
cleaner removes some of these directories based on the age. An example
would be to keep 8 hours of hourly backups then only keep a backup of
every 4 hours and after 24 hours only keep a backup of very 8 hours and
after 2 days on keep 1 backup for each day, etc.

@menu
* Command-line Options::        Short and long names, grouped by category.
* Microsoft Windows::        Short and long names, grouped by category.
@end menu

@node Command-line Options
@section Command-line Options

@command{backerup} comes with a rich set of options:

@menu
* Generic Program Information:: Short and long names, grouped by category.
* Environment Variables::       Evironment variables used
@end menu

@node Generic Program Information
@subsection Generic Program Information

@table @option

@item --help
@opindex --help
@cindex usage summary, printing
Print a usage message briefly summarizing the command-line options
and the bug-reporting address, then exit.

@item -V
@itemx --version
@opindex -V
@opindex --version
@cindex version, printing
Print the version number of @command{grep} to the standard output stream.
This version number should be included in all bug reports.

@end table

@node Environment Variables
@subsection Environment Variables

Backerup uses the following environment variables:

@table @code

@item PATH

@end table

@node Microsoft Windows
@section Microsoft Windows

If you can get @emph{rsyncd} to run on a Windows compter you can use
@emph{backerup} to backup that computer.


@section design
@subsection copier

If a timeslice is added to a reconciled page some sort of error needs to be generated.

@subsection sieve

It is possible to merge one project into another.  All of the unreconsiled
times from the original project will be moved to the new project.

@subsection collector

These are notifications and can come from many sources.
A notification has a start time and my have a endtime and a type.

@node Errors and omissions
@chapter Errors and omissions

There are no bugs.

@node History
@appendix History of BackerUp

@itemize @bullet
@item
The initial system was designed and written by G. Allen Morris III.
@end itemize

BackerUp was written to improve on the features of the rsnapshot backup system.

In a remote backup system you would like to have all of the files to be
with in some age, however this may not be possible in the case of very
large files as it can take many hours is not days to copy these files
across the network.

One way to solve this problem is to copy vary large files at a reduced bandwidth
and while they are being backup continue to backup smaller files.

In order to do this you new a @emph{stable} version of the backup as
well as the @emph{working} version of the backup. Rsync copies files
into the working area and then these files are ``copied'' into the
@emph{stable} when they are copletely copied. While the @emph{stable}
version of the backup my not be complete snapshot of the remote file
system each file is complete.

@node Copying this manual
@appendix Copying this manual
@menu
* GNU General Public License::  How you can copy and share this manual.
@end menu

@include gpl.texi

@bye
